#!/bin/bash

## give back a file that is asked for (if it is on one of the media devices)

## the desired format for the input is: ip/cgi-bin/pleaseGiveMeAFile?location=deviceName&fileName=fileName

## Nicholas Faliszewski
## March 2020


backupIFS=$IFS
IFS="=&"
params=($QUERY_STRING)
IFS=$backupIFS

if [[ "${params[0]}" == "location" ]] && [[ "${params[2]}" == "fileName" ]]
then ## requesting a file for download
	if [[ "${params[3]}" == *".mp4" ]] ## mp4 file
	then
		echo "Content-Type: video/mp4"
		fileSize=$(stat -c %s /media/"${params[1]//%20/ }"/"${params[3]//%20/ }") ## how big is the file?
		echo "Content-Length: $fileSize"
		echo "Content-Disposition: attachment; filename=${params[3]//%20/ }"
		echo "Cache-Control: no-cache"
		echo ""

		cat /media/"${params[1]//%20/ }"/"${params[3]//%20/ }" ## return the requested file

	elif [[ "${params[3]}" == *".dng" ]] ## dng file
	then
		echo "Content-Type: image/dng"
		fileSize=$(stat -c %s /media/"${params[1]//%20/ }"/"${params[3]//%20/ }") ## how big is the file?
		echo "Content-Length: $fileSize"
		echo "Content-Disposition: attachment; filename=${params[3]##*'/'//%20/ }"
		echo ""
		cat /media/"${params[1]//%20/ }"/"${params[3]//%20/ }" ## return the requested file

	elif [[ "${params[3]//%20/ }" == *".tiff" ]] ## tiff file
	then
		echo "Content-Type: image/tiff"
		fileSize=$(stat -c %s /media/"${params[1]//%20/ }"/"${params[3]//%20/ }") ## how big is the file?
		echo "Content-Length: $fileSize"
		echo "Content-Disposition: attachment; filename=${params[3]##*'/'//%20/ }"
		echo ""
		cat /media/"${params[1]//%20/ }"/"${params[3]//%20/ }" ## return the requested file

	else
		echo "Content-Type: text/plain"
		echo ""

		echo "I don't recognize that file type"
		echo "I saw a request for: ${params[3]//%20/ }"

	fi

elif [[ "${params[0]}" == "delete" ]] && [[ "${params[2]}" == "fileName" ]] ## request a file/folder be deleted
then
	if [[ "${params[3]}" == *".mp4" ]] || [[ "${params[3]}" == *".dng" ]] || [[ "${params[3]//%20/ }" == *".tiff" ]]
	then ## trying to delete a file
		echo "Content-Type: text/plain"
		echo ""

		 ## I cannot delete a file from here (permission issues), so instead, I ask the 'mountNetDrive' file to do it (netDriveHelper service)
		echo "please delete: /media/${params[1]//%2F/ }/${params[3]//%2F//}" > /tmp/mountRequest.nf ## replace '%2F' with '/'

		echo "deleted the file /media/${params[1]//%2F//}/${params[3]//%20/ } ; hope you meant it"
	elif [[ "${params[3]//%20/ }" == *"/" ]]
	then ## trying to delete an entire folder
		## Not implemented
		echo "Content-Type: text/plain"
		echo ""

		echo "This is where I would delete all the contents in: /media/${params[1]//%20/ }/${params[3]//%20/ }/"
	else
		echo "Content-Type: application/x-tar"
		echo ""

		echo "I don't recognize that file type"
		echo "I saw a request for ${params[3]//%20/ }"

	fi

elif [[ "${params[0]}" == "calibration" ]] ## requesting the calibration data
then
	## check if there's calibration data on this camera that I can actually send
	if true
	then

		## >> not finished being implemented... Sorry

		 ## need to get the serial number (maybe it can just be submitted as an argument?)
		if [[ "${params[1]}" == "cal_"* ]] ## if a serial number was provided
		then
			fileName="${params[1]//%20/}.tar"
		else
			fileName="cal_CR21.tar"
		fi
#		tar -cf "$fileName" "/var/camera/cal/*"

		echo "Content-Type: application/x-tar"
#		fileSize=$(stat -c %s $fileName)
		echo "Content-Length: $fileSize"
		echo "Content-Disposition: attachment; filename=$fileName"
		echo "Cache-Control: no-cache"
		echo ""
#		cat $fileName ## return the calibration tar file

	else
		echo "Content-Type: text/plain"
		echo ""

		echo "Something went wrong while requesting calibration data"

	fi

else
	echo "Content-Type: text/plain"
	echo ""

	echo "unable to get that file; are you sure you requested it properly?"
	echo "the correct format is: ip/cgi-bin/pleaseGiveMeAFile?location=deviceName&fileName=nameOfFile"
	echo ""
fi
